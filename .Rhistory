group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia, East/West Germany)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
medals_by_year$Country %in% c("East Germany", "West Germany") ~ "Germany (East/West)",
TRUE ~ medals_by_year$Country
)
# Combine East/West Germany medals into one for simplicity
medals_by_year_grouped <- medals_by_year %>%
group_by(Country, Year) %>%
summarise(Medal_Count = sum(Medal_Count), .groups = "drop")
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Step 1: Choose only the USA, Russia, Soviet Union
countries_of_interest <- c("United States", "Russia", "Soviet Union")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Step 2: Normalize names
medals_by_year$Country <- case_when(
medals_by_year$Country == "Soviet Union" ~ "USSR",
medals_by_year$Country == "Russia" ~ "USSR",  # Merge Russia & USSR
TRUE ~ medals_by_year$Country
)
# Step 3: Combine USSR + Russia totals
medals_by_year_grouped <- medals_by_year %>%
group_by(Country, Year) %>%
summarise(Medal_Count = sum(Medal_Count), .groups = "drop")
# Step 4: Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.4) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends: USA vs USSR (1896–2016)",
x = "Olympic Year",
y = "Total Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold", size = 14)
)
library(dplyr)
library(ggplot2)
# Step 1: Select only the countries of interest
countries_of_interest <- c("United States", "Russia", "Soviet Union")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
mutate(
Country = case_when(
Country == "Soviet Union" ~ "USSR",
Country == "Russia" ~ "USSR",
TRUE ~ Country
)
) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Step 2: Plot
ggplot(medals_by_year, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.4) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends: USA vs USSR (1896–2016)",
x = "Olympic Year",
y = "Total Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold", size = 14)
)
library(dplyr)
library(ggplot2)
# Filter and summarize medal counts by country and year
countries_of_interest <- c("United States", "Russia", "Soviet Union", "Germany", "East Germany", "West Germany", "United Kingdom", "France", "China", "Japan")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia, East/West Germany)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
medals_by_year$Country %in% c("East Germany", "West Germany") ~ "Germany (East/West)",
TRUE ~ medals_by_year$Country
)
# Combine East/West Germany medals into one for simplicity
medals_by_year_grouped <- medals_by_year %>%
group_by(Country, Year) %>%
summarise(Medal_Count = sum(Medal_Count), .groups = "drop")
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Filter and summarize medal counts by country and year
countries_of_interest <- c("United States", "Russia", "Soviet Union")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia,)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
TRUE ~ medals_by_year$Country
)
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Filter and summarize medal counts by country and year
countries_of_interest <- c("United States", "Russia", "Soviet Union")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia,)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
TRUE ~ medals_by_year$Country
)
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Filter and summarize medal counts by country and year
countries_of_interest <- c("United States", "Russia", "Soviet Union")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia,)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
TRUE ~ medals_by_year$Country
)
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Filter and summarize medal counts by country and year
countries_of_interest <- c("United States", "Russia", "Soviet Union")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia,)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
TRUE ~ medals_by_year$Country
)
# Plot
ggplot(medals_by_year, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Step 1: Filter only countries of interest
countries_of_interest <- c("United States", "Soviet Union", "Russia")
# Step 2: Filter and rename USSR/Russia
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
mutate(
Country = case_when(
Country %in% c("Soviet Union", "Russia") ~ "USSR",
TRUE ~ Country
)
) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# ✅ Debug: check if USSR rows exist
print(unique(medals_by_year$Country))
# Step 3: Plot
ggplot(medals_by_year, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.4) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends: USA vs USSR (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold", size = 14)
)
View(athletes_merged)
View(athletes_merged)
library(dplyr)
library(ggplot2)
# Step 1: Filter only USA + USSR/Russia using correct column name
countries_of_interest <- c("United States", "Soviet Union", "Russia")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
mutate(
Country = case_when(
Country %in% c("Soviet Union", "Russia") ~ "USSR",
TRUE ~ Country
)
) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Plot
ggplot(medals_by_year, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.4) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends: USA vs USSR (1896–2016)",
x = "Year",
y = "Total Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(face = "bold", size = 14)
)
library(dplyr)
library(ggplot2)
# Filter and summarize medal counts by country and year
countries_of_interest <- c("United States", "Russia", "Soviet Union", "Germany", "East Germany", "West Germany", "United Kingdom", "France", "China", "Japan")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia, East/West Germany)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
medals_by_year$Country %in% c("East Germany", "West Germany") ~ "Germany (East/West)",
TRUE ~ medals_by_year$Country
)
# Combine East/West Germany medals into one for simplicity
medals_by_year_grouped <- medals_by_year %>%
group_by(Country, Year) %>%
summarise(Medal_Count = sum(Medal_Count), .groups = "drop")
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(athletes_merged)
View(athletes_merged)
View(athletes)
View(athletes)
library(dplyr)
library(ggplot2)
# Filter and summarize medal counts by country and year
countries_of_interest <- c("United States", "Russia", "Soviet Union", "Germany", "East Germany", "West Germany", "United Kingdom", "France", "China", "Japan")
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize country names (e.g., USSR/Russia, East/West Germany)
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("Soviet Union") ~ "USSR",
medals_by_year$Country %in% c("Russia") ~ "Russia",
medals_by_year$Country %in% c("East Germany", "West Germany") ~ "Germany (East/West)",
TRUE ~ medals_by_year$Country
)
# Combine East/West Germany medals into one for simplicity
medals_by_year_grouped <- medals_by_year %>%
group_by(Country, Year) %>%
summarise(Medal_Count = sum(Medal_Count), .groups = "drop")
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.1) +
geom_point(size = 2) +
labs(
title = "Olympic Medal Trends for Key Countries (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
# Filter for just USA, Germany (all forms), and Japan
countries_of_interest <- c("United States", "Germany", "East Germany", "West Germany", "Japan")
# Filter and count medals
medals_by_year <- athletes_merged %>%
filter(!is.na(Medal), Country %in% countries_of_interest) %>%
group_by(Country, Year) %>%
summarise(Medal_Count = n(), .groups = "drop")
# Normalize Germany names
medals_by_year$Country <- case_when(
medals_by_year$Country %in% c("East Germany", "West Germany", "Germany") ~ "Germany (E/W)",
TRUE ~ medals_by_year$Country
)
# Combine East/West Germany counts
medals_by_year_grouped <- medals_by_year %>%
group_by(Country, Year) %>%
summarise(Medal_Count = sum(Medal_Count), .groups = "drop")
# Plot
ggplot(medals_by_year_grouped, aes(x = Year, y = Medal_Count, color = Country)) +
geom_line(size = 1.2) +
geom_point(size = 2.2) +
labs(
title = "Olympic Medal Trends: USA vs Germany vs Japan (1896–2016)",
x = "Year",
y = "Number of Medals",
color = "Country"
) +
theme_minimal() +
scale_x_continuous(breaks = seq(1900, 2020, 8)) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 14, face = "bold")
)
system("git add .")
system("git commit -m 'Update Olympic analysis project'")
system("git push origin main")
system("git commit -m "Update Olympic analysis project" ")
system("git commit -m 'Update Olympic analysis project'")
system("git commit -m \"Update Olympic analysis project\"")
system("git push origin main")
library(tidyverse)
library(readr)
# GDP long format
gdp_long <- gdp %>%
select(`Country.Name`, starts_with("X19"), starts_with("X20")) %>%
pivot_longer(cols = starts_with("X"), names_to = "Year", values_to = "GDP") %>%
mutate(Year = as.integer(sub("X", "", Year))) %>%
rename(Country = `Country.Name`)
# Population long format
pop_long <- population %>%
select(`Country.Name`, starts_with("X19"), starts_with("X20")) %>%
pivot_longer(cols = starts_with("X"), names_to = "Year", values_to = "Population") %>%
mutate(Year = as.integer(sub("X", "", Year))) %>%
rename(Country = `Country.Name`)
# Preview
head(gdp_long)
head(pop_long)
# Get list of valid countries from GDP and Population datasets
valid_countries <- union(gdp_long$Country, pop_long$Country) %>% unique()
# Prepare and merge only valid countries
athletes_merged <- athletes_clean %>%
rename(Country = Team) %>%
filter(Country %in% valid_countries) %>%
mutate(Year = as.integer(Year)) %>%
left_join(gdp_long, by = c("Country", "Year")) %>%
left_join(pop_long, by = c("Country", "Year"))
# Check result
head(athletes_merged)
# Total medals per country (across all years)
# Filter to real medals, deduplicate per medal event
medals_cleaned <- athletes_merged %>%
filter(!is.na(Medal)) %>%
distinct(Country, Year, Event, Medal, Sport)
# Join GDP & Population again
medals_summary <- medals_cleaned %>%
left_join(gdp_long, by = c("Country", "Year")) %>%
left_join(pop_long, by = c("Country", "Year")) %>%
group_by(Country) %>%
summarise(
Total_Medals = n(),
GDP = max(GDP, na.rm = TRUE),
Population = max(Population, na.rm = TRUE),
.groups = "drop"
)
# Check result
head(medals_summary)
library(dplyr)
library(ggplot2)
# Clean the data
medals_clean <- medals_summary %>%
filter(
!is.na(GDP),
!is.na(Total_Medals)
)
ggplot(medals_clean, aes(x = GDP, y = Total_Medals)) +
geom_point(alpha = 0.6, color = "#00BFC4", size = 2) +
scale_x_log10() +
scale_y_log10() +
labs(
title = "GDP per Capita vs Total Olympic Medals (Log Scale)",
x = "GDP per Capita (log scale)",
y = "Total Medals (log scale)"
) +
theme_minimal()
library(ggplot2)
library(dplyr)
# Filter out countries with missing population
medals_summary_normalized <- medals_summary %>%
filter(!is.na(Population), Population > 0) %>%
mutate(
Medals_per_Million = Total_Medals / (Population / 1e6),
Pop_Group = case_when(
Population < 1e7 ~ "Small (<10M)",
Population < 1e8 ~ "Medium (10M-100M)",
TRUE ~ "Large (>100M)"
)
)
ggplot(medals_summary_normalized, aes(x = Pop_Group, y = Medals_per_Million)) +
geom_boxplot(fill = "skyblue") +
scale_y_log10() +
labs(
title = "Medals per Million by Population Group",
x = "Population Group",
y = "Medals per Million (log scale)"
) +
theme_minimal()
library(ggplot2)
library(dplyr)
library(ggrepel)
medals_colored <- medals_summary_normalized %>%
filter(!is.na(GDP), !is.na(Population), Total_Medals > 0)
top_medals <- medals_colored %>%
arrange(desc(Total_Medals)) %>%
slice_head(n = 10)
ggplot(medals_colored, aes(x = GDP, y = Total_Medals, color = Population)) +
geom_point(alpha = 0.8, size = 3) +
scale_x_log10() +
scale_y_log10() +
scale_color_viridis_c(trans = "log10") +
geom_text_repel(data = top_medals, aes(label = Country), size = 3.2) +
labs(
title = "Top Medal Countries: GDP vs Medals",
x = "GDP per Capita (log scale)",
y = "Total Olympic Medals (log scale)",
color = "Population"
) +
theme_minimal()
